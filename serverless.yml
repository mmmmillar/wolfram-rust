service: wolfram5

plugins:
  - serverless-s3-sync

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-west-2

custom:
  s3Sync:
    - bucketName: ${self:service}
      localDir: www/dist
      deleteRemoved: true
      followSymlinks: true
      defaultContentType: text/html

resources:
  Resources:
    StaticSite:
      Type: AWS::S3::Bucket
      Properties:
        OwnershipControls:
          Rules:
            - ObjectOwnership: BucketOwnerPreferred
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          IgnorePublicAcls: false
          BlockPublicPolicy: false
          RestrictPublicBuckets: false
        BucketName: ${self:service}
        WebsiteConfiguration:
          IndexDocument: index.html
    BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref StaticSite
        PolicyDocument:
          Statement:
            - Action:
                - s3:GetObject
              Resource:
                - arn:aws:s3:::${self:service}/*
                - arn:aws:s3:::${self:service}
              Effect: Allow
              Principal: "*"
    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Origins:
            - DomainName: !GetAtt StaticSite.RegionalDomainName
              Id: S3Origin
              S3OriginConfig:
                OriginAccessIdentity: ""
          DefaultRootObject: index.html
          Enabled: true
          PriceClass: PriceClass_100
          ViewerCertificate:
            AcmCertificateArn: arn:aws:acm:us-east-1:654654585384:certificate/00af23ea-f993-4d8e-a5f1-53fa33ef4d88
            SslSupportMethod: sni-only
          DefaultCacheBehavior:
            TargetOriginId: S3Origin
            ForwardedValues:
              QueryString: false
            ViewerProtocolPolicy: redirect-to-https
          Aliases:
            - matthewmillar.tech
            - www.matthewmillar.tech
