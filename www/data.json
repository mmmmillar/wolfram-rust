{
  "index": {
    "name": "index",
    "header": {
      "title": "Matthew Millar | Software Engineer",
      "description": "London-based Software Engineer proficient in Rust, Elixir, Javascript, Python, C#. Experienced in diverse projects. Seeking new opportunities."
    },
    "content": {
      "h1": "Hello!",
      "blocks": [
        {
          "body": "I'm Matt, a London-based software engineer with a love for building innovative solutions. I'm comfortable across the stack and in a variety of languages and technologies. Recently I've been learning Rust and Elixir, so I'm particulary keen to gain some experience on collaborating on projects utilising these awesome languages."
        },
        {
          "body": "Please don't hesitate to reach out if you have questions or opportunities. Let's build something extraordinary together!"
        },
        {
          "body": "Write me here: <a href=\"mailto:mattymillar@gmail.com\">mattymillar@gmail.com</a>"
        }
      ]
    }
  },
  "automata": {
    "name": "automata",
    "header": {
      "title": "Matthew Millar | Software Engineer | Cellular Automata",
      "description": "A brief intro to Cellular Automata using Wolfram's Code numbering system. Contains a generative implementation of a subset of the Wolfram rules, built in Rust."
    },
    "content": {
      "h1": "Cellular Automata!",
      "blocks": [
        {
          "body": "The background imagery on this website is generated using a model of computation known as Cellular Automata, in particular the one-dimensional automata defined by Stephen Wolfram in his <a href=\"https://en.wikipedia.org/wiki/Wolfram_code\" target=\"_blank\">Wolfram Code</a> numbering system. If you hit the Animate button in the top right of your screen (Desktop only), the automata will generate on the fly using a randomly selected rule. I also had a go at rendering it in 3D using Three.js <a href=\"/3d.html\">here</a>."
        },
        {
          "body": "Researchers find Cellular Automata intriguing due to their capacity to exhibit complex and unpredictable behavior emerging from simple rules. They also look pretty cool right! The rules I used are decribed <a href=\"https://mathworld.wolfram.com/ElementaryCellularAutomaton.html\" target=\"_blank\">here</a> pretty well if you're interested in giving it a go yourself."
        },
        {
          "body": "You can see my code <a href=\"https://github.com/mmmmillar/wolfram-rust/blob/main/src/lib.rs\" target=\"_blank\">here</a>"
        }
      ]
    }
  }
}
